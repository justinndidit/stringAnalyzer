name: stringAnalyzer

services:
  postgres:
    container_name: postgres
    image: postgres:16
    env_file:
      - path: .env
        required: true
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME:-stringanalyzer}
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER}']
      interval: 10s
      retries: 5

  stringanalyzer:
    container_name: stringanalyzer
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - path: .env
        required: true
    environment:
      - PORT=${PORT:-8080}
      - GO_ENV=${GO_ENV:-production}
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME:-stringanalyzer}?sslmode=disable
      - SERVER_READ_TIMEOUT=${SERVER_READ_TIMEOUT:-30}
      - SERVER_WRITE_TIMEOUT=${SERVER_WRITE_TIMEOUT:-30}
      - SERVER_IDLE_TIMEOUT=${SERVER_IDLE_TIMEOUT:-60}
    ports:
      - '${PORT:-8080}:${PORT:-8080}'
    networks:
      - backend
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://localhost:${PORT:-8080}/kaithheathcheck']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  pg-admin:
    image: dpage/pgadmin4
    restart: unless-stopped
    container_name: pg-admin
    env_file:
      - path: .env
        required: true
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - '5050:80'
    networks:
      - backend
    depends_on:
      - postgres

networks:
  backend:
    driver: bridge

volumes:
  postgres:
  redis_data:
    driver: local