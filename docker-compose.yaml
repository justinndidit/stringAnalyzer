name: jobortunity

services:
  postgres:
    container_name: postgres
    image: postgres:16
    env_file:
      - path: .env
        required: true
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER}']
      interval: 10s
      retries: 5
  pg-admin:
    image: dpage/pgadmin4
    restart: unless-stopped
    container_name: pg-admin
    env_file:
    - path: .env
      required: true
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - '5050:80'
    networks:
      - backend
    depends_on:
      - postgres
  # redis:
  #   image: redis:7.2-alpine
  #   container_name: redis
  #   restart: always
  #   ports:
  #     - "6379:6379"
  #   command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
  #   env_file:
  #     - .env
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - backend
  # redis-insight:
  #   image: redis/redis-insight:latest # Optional: Redis Insight for GUI
  #   container_name: redis-insight
  #   ports:
  #     - "8001:8001" # Map host port 8001 to container port 8001
  #   depends_on:
  #     - redis
networks:
  backend:
    driver: bridge

volumes:
  postgres:
  redis_data:
    driver: local